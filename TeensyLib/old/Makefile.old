# cpu =  cortex-m4
# arch = armv7e-m
#
# path dell'ambiente di sviluppo
ARDUINO=/home/leo/teensy/arduino
TEENSY=$(ARDUINO)/hardware/teensy/cores/teensy3

# path dei $(LIB_SRC)
VPATH=$(TEENSY)

# TIME_T serve per inizializzare il RTC ad una data/ora piu' o meno esatta
CFLAGS=-Os -Wall \
	-ffunction-sections -fdata-sections \
	-mcpu=cortex-m4 \
	-mfloat-abi=soft \
	-mthumb \
	-MMD \
	-DF_CPU=96000000 -DUSB_VID=null -DUSB_PID=null -DARDUINO=105 \
	-D__MK20DX256__ -DTEENSYDUINO=118 \
	-DTIME_T=1412425835 -DUSB_SERIAL \
	-DLAYOUT_US_ENGLISH \
	-I $(TEENSY)

CXXFLAGS = $(CFLAGS) \
	-fno-rtti -felide-constructors -std=gnu++0x -fno-exceptions 

CC=arm-none-eabi-gcc
CXX=arm-none-eabi-g++
AR=arm-none-eabi-ar

LIB_SRC= \
	analog.c \
	eeprom.c \
	keylayouts.c \
	math_helper.c \
	nonstd.c \
	pins_teensy.c \
	serial1.c \
	serial2.c \
	serial3.c \
	touch.c \
	usb_desc.c \
	usb_dev.c \
	usb_joystick.c \
	usb_keyboard.c \
	usb_mem.c \
	usb_midi.c \
	usb_mouse.c \
	usb_rawhid.c \
	usb_seremu.c \
	usb_serial.c \
	yield.c \
	AudioStream.cpp \
	avr_emulation.cpp \
	HardwareSerial1.cpp \
	HardwareSerial2.cpp \
	HardwareSerial3.cpp \
	IntervalTimer.cpp \
	IPAddress.cpp \
	main.cpp \
	new.cpp \
	Print.cpp \
	Stream.cpp \
	Tone.cpp \
	usb_flightsim.cpp \
	usb_inst.cpp \
	WMath.cpp \
	WString.cpp


# si usa := per evitare la ricursione infinita che si avrebbe con =
LIB_OBJ:=$(patsubst %.cpp,%.o,$(LIB_SRC))
LIB_OBJ:=$(patsubst %.c,%.o,$(LIB_OBJ))
LIB_OBJ:=$(patsubst %.o,obj/%.o,$(LIB_OBJ))

obj/%.o : %.cpp
	@echo $(notdir $<)
	@$(CXX) -c $(CXXFLAGS) $< -o $@
obj/%.o : %.c
	@echo $(notdir $<)
	$(CC) -c $(CFLAGS) $< -o $@

%.s : %.cpp
	$(CXX) -S -c $(CXXFLAGS) $< -o $@
%.s : %.c
	$(CC) -S -c $(CFLAGS) $< -o $@

TARGET=libTeensy.a

all : mk20dx128.o $(TARGET) teensy_loader_cli

mk20dx128.o : obj/mk20dx128.o
	cp obj/mk20dx128.o .

obj/mk20dx128.o : | obj
$(LIB_OBJ): | obj

obj :
	mkdir -p obj

$(TARGET) : $(LIB_OBJ)
	@echo $(notdir $<)
	@rm -f $@
	@$(AR) -cvq $@ $^

-include $(LIB_OBJ:.o=.d)

clean : 
	-rm -f $(TARGET)
	-rm -f mk20dx128.o
	-rm -rf obj
	-rm teensy_loader_cli

ifeq ($(shell uname),Linux)
DD=-DUSE_LIBUSB=1
LL=-lusb
else
DD=-DUSE_WIN32=1
LL=-lsetupapi -lhid
endif

teensy_loader_cli : teensy_loader_cli.c
	gcc $(DD) teensy_loader_cli.c $(LL) -o teensy_loader_cli
